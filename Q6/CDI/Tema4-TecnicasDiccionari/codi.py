#[literal, match length, Distance]
def decodeL77(missatge):
    decoded = ''
    for (literal, match_length, distance) in missatge:
        if distance > 0:
            start_pos = len(decoded) - distance
            if distance == 1:
                decoded += decoded[start_pos] * match_length
            else:
                decoded += decoded[start_pos:start_pos + match_length]

        decoded += literal

    return decoded


#4 bits para indicar el match length y 12 bits para el offset
match_length_bits = 4
offset_bits = 12

def decodeLZSS(encoded):
    decoded = ''
    while encoded:
        flags = encoded[:8]
        encoded = encoded[8:]
        for i in flags:
            if not encoded:  # Verifica si hay datos disponibles
                break
            if i == '0':
                byte = int(encoded[:8], 2).to_bytes(1, 'big')
                decoded += byte.decode('utf-8', errors='strict')
                encoded = encoded[8:]
            else:
                match_length = int(encoded[:match_length_bits], 2) + 1
                encoded = encoded[match_length_bits:]
                offset = int(encoded[:offset_bits], 2) + 1
                encoded = encoded[offset_bits:]
                if offset == 1:
                    decoded += decoded[-1] * match_length
                else:
                    start_pos = len(decoded) - offset
                    decoded += decoded[start_pos:start_pos + match_length]

    return decoded


codi = [['T', 0, 0], ['h', 0, 0], ['e', 0, 0], [' ', 0, 0], ['i', 1, 4], ['m', 0, 0], ['M', 2, 5], ['a', 0, 0], ['c', 0, 0], ['i', 1, 11], ['n', 0, 0], [',', 1, 13], ['H', 1, 14], ['(', 0, 0], ['r', 1, 18], ['b', 0, 0], ['t', 2, 3], [')', 0, 0], ['G', 1, 24], ['o', 2, 10], ['g', 1, 11], [')', 1, 27], ['W', 1, 28], ['l', 1, 31], ['s', 1, 1], ['[', 1, 25], ['1', 0, 0], ['8', 0, 0], ['9', 0, 0], ['5', 0, 0], [']', 0, 0], ['.', 2, 7], [']', 2, 1], ['“', 1, 28], ['I', 0, 0], ['n', 0, 0], ['a', 1, 23], ['m', 1, 25], ['o', 0, 0], ['e', 1, 2], ['t', 1, 8], ['I', 1, 26], ['w', 1, 28], ['s', 1, 12], ['c', 1, 25], ['l', 0, 0], ['u', 0, 0], ['c', 1, 11], ['h', 0, 0], ['d', 1, 16], ['b', 1, 28], ['y', 0, 0], ['s', 1, 31], ['v', 1, 23], ['r', 1, 25], ['l', 1, 20], ['h', 1, 26], ['n', 1, 24], ['s', 1, 16], [',', 0, 0], ['a', 1, 31], [' ', 2, 6], ['h', 1, 28], ['e', 2, 18], ['w', 1, 28], ['s', 1, 21], ['n', 1, 29], ['o', 0, 0], ['m', 1, 24], ['i', 0, 0], ['t', 1, 22], ['k', 1, 31], ['n', 1, 5], ['g', 0, 0], ['a', 3, 23], [' ', 1, 26], ['y', 3, 28], ['e', 2, 27], ['r', 0, 0], [' ', 1, 6], ['r', 1, 22], ['i', 1, 9], ['o', 4, 22], ['h', 1, 25], ['u', 1, 24], ['l', 0, 0], ['m', 1, 30], ['b', 2, 18], ['c', 1, 8], ['k', 0, 0], ['.', 0, 0], ['I', 1, 29], ['s', 1, 31], ['u', 2, 27], [' ', 2, 10], ['n', 1, 22], ['t', 1, 27], ['e', 1, 27], [' ', 1, 11], ['i', 1, 28], ['g', 0, 0], ['t', 1, 7], [',', 0, 0], ['d', 3, 15], ['w', 1, 28], ['v', 1, 20], ['d', 1, 17], ['i', 1, 25], [' ', 1, 23], ['n', 1, 19], ['t', 1, 31], ['i', 2, 28], ['d', 2, 29], ['z', 1, 23], ['l', 1, 1], ['f', 3, 20], ['c', 1, 31], ['s', 1, 26], ['.', 0, 0], ['Y', 1, 27], ['o', 0, 0], ['u', 0, 0], ['c', 1, 31], ['n', 1, 19], ['s', 1, 29], ['r', 2, 5], [' ', 2, 17], ['i', 0, 0], ['m', 0, 0], ['g', 1, 31], ['n', 1, 4], ['h', 2, 8], ['w', 1, 23], ['n', 1, 27], ['u', 1, 23], ['e', 1, 22], ['t', 1, 27], ['g', 2, 15], ['l', 0, 0], ['y', 0, 0], ['n', 2, 25], ['u', 1, 19], ['n', 2, 28], ['t', 1, 25], ['e', 1, 26], ['l', 2, 13], ['o', 1, 30], ['k', 0, 0], ['d', 1, 26], ['—', 0, 0], ['o', 2, 12], ['s', 0, 0], [' ', 1, 14], ['p', 0, 0], ['l', 1, 22], [',', 1, 19], ['c', 1, 24], ['i', 1, 31], ['l', 1, 29], ['s', 1, 27], [' ', 1, 16], ['f', 0, 0], ['c', 1, 15], [' ', 2, 7], ['n', 1, 20], [' ', 1, 31], ['g', 0, 0], ['r', 0, 0], ['a', 1, 29], ['t', 0, 0], ['l', 2, 26], ['d', 1, 25], [',', 4, 25], ['p', 1, 26], ['n', 1, 9], ['k', 0, 0], ['s', 1, 12], ['h', 0, 0], ['-', 0, 0], ['y', 3, 24], ['e', 1, 29], ['e', 1, 3], ['!', 1, 20], ['—', 0, 0], ['a', 0, 0], [' ', 1, 24], ['t', 0, 0], ['e', 1, 17], ['s', 2, 14], ['a', 1, 6], ['d', 2, 21], ['i', 1, 21], ['n', 0, 0], ['i', 4, 15], [' ', 1, 11], ['b', 0, 0], ['l', 0, 0], ['d', 2, 11], ['e', 1, 13], ['s', 1, 30], ['a', 1, 31], [' ', 2, 8], ['e', 1, 14], ['w', 0, 0], ['l', 1, 26], ['e', 1, 30], ['m', 1, 23], ['n', 1, 27], ['.', 1, 31], ['B', 1, 28], ['u', 0, 0], [' ', 1, 5], ['I', 0, 0], ['d', 1, 24], ['d', 1, 18], ['n', 1, 28], ['o', 0, 0], ['s', 2, 10], ['a', 1, 18], ['y', 0, 0], ['t', 1, 19], [' ', 1, 9], ['l', 0, 0], ['o', 1, 12], ['k', 0, 0], [',', 0, 0], ['p', 3, 24], ['r', 0, 0], ['m', 1, 21], ['s', 1, 27], ['e', 0, 0], ['y', 1, 28], ['u', 1, 28], [':', 0, 0], ['r', 3, 15], ['t', 1, 10], ['a', 2, 3], ['e', 1, 4], ['d', 0, 0], ['a', 1, 27], ['g', 0, 0], ['i', 1, 7], ['n', 0, 0], [',', 0, 0], ['n', 2, 7], ['w', 2, 11], ['h', 0, 0], ['n', 1, 22], ['m', 1, 28], ['y', 0, 0], ['s', 1, 31], ['c', 1, 29], ['o', 0, 0], ['m', 3, 15], ['t', 1, 27], ['h', 1, 8], ['h', 1, 25], ['d', 1, 31], ['e', 1, 29], ['e', 2, 29], [',', 1, 31], ['I', 1, 27], ['t', 2, 26], ['r', 0, 0], ['u', 0, 0], ['k', 1, 28], ['y', 2, 26], ['t', 1, 29], ['i', 1, 26], ['d', 1, 11], ['.', 0, 0], ['t', 2, 19], ['h', 1, 29], ['a', 0, 0], [' ', 1, 29], ['l', 1, 3], ['o', 1, 19], [' ', 2, 28], ['b', 0, 0], ['r', 1, 29], ['n', 0, 0], ['t', 2, 17], ['r', 1, 27], ['u', 1, 13], ['g', 0, 0], [' ', 1, 23], ['w', 0, 0], ['e', 1, 26], [' ', 1, 14], ['I', 0, 0], ['r', 1, 28], ['a', 1, 6], ['c', 0, 0], ['d', 2, 10], ['e', 3, 23], ['o', 1, 27], ['p', 0, 0], ['i', 2, 19], ['g', 1, 21], ['i', 1, 27], ['t', 1, 25], [' ', 1, 11], ['s', 4, 17], ['a', 1, 26], ['f', 0, 0], ['.', 1, 25], ['I', 1, 28], ['l', 1, 30], ['y', 1, 8], ['d', 1, 30], ['w', 1, 31], [' ', 1, 30], ['n', 1, 24], ['e', 5, 25], ['g', 1, 13], [',', 1, 30], ['f', 1, 31], ['r', 1, 18], ['t', 5, 14], ['r', 1, 18], ['b', 1, 28], ['f', 2, 27], ['g', 5, 27], ['e', 1, 20], ['a', 0, 0], [' ', 1, 21], ['p', 0, 0], ['u', 0, 0], ['m', 0, 0], [' ', 1, 3], ['e', 1, 20], ['l', 0, 0], ['w', 1, 24], ['m', 1, 30], ['d', 1, 15], ['m', 2, 22], ['i', 3, 25], ['d', 1, 8], ['y', 0, 0], ['.', 0, 0], ['EOF', 0, 0]]
print(decodeL77(codi))

codi
print(decodeLZSS(codi))